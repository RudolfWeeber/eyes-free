<?xml version="1.0" encoding="UTF-8"?>
  <ss:speechstrategy xmlns:ss="http://www.google.android.marvin.talkback.com/speechstrategy" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://www.google.android.marvin.talkback.com/speechstrategy speechstrategy.xsd">

  <!-- This file contains only generic speech strategy rules that could apply to any app. -->
  <!-- Rules specific to just one app should go in speechstrategy_apps.xml or -->
  <!-- speechstrategy_thirdparty.xml. -->
  
  <!-- ANNOUNCEMENT -->
  
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_ANNOUNCEMENT</ss:eventType>
    </ss:filter>
    <ss:formatter>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- TOUCH EXPLORATION -->

  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_TOUCH_EXPLORATION_GESTURE_START||TYPE_TOUCH_EXPLORATION_GESTURE_END||TYPE_VIEW_HOVER_ENTER||TYPE_VIEW_HOVER_EXIT||TYPE_VIEW_ACCESSIBILITY_FOCUSED</ss:eventType>
    </ss:filter>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.TouchExplorationFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_VIEW_SCROLLED -->
  
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_SCROLLED</ss:eventType>
    </ss:filter>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.ScrollFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_VIEW_CLICKED -->

  <!-- CompoundButton checked -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_CLICKED</ss:eventType>
      <ss:className>android.widget.CompoundButton</ss:className>
      <ss:checked>true</ss:checked>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_clicked_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_clicked</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/value_checked</ss:template>
    </ss:formatter>
  </ss:rule>

  <!-- CompoundButton unchecked-->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_CLICKED</ss:eventType>
      <ss:className>android.widget.CompoundButton</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_clicked_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_clicked</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/value_not_checked</ss:template>
    </ss:formatter>
  </ss:rule>

  <!-- All other clicks -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_CLICKED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_clicked_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_clicked</ss:customEarcon>
    </ss:metadata>
  </ss:rule>

  <!-- TYPE_VIEW_LONG_CLICKED -->

  <!-- All other long clicks -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_LONG_CLICKED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_clicked_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_clicked</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/template_long_clicked</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_VIEW_FOCUSED -->

  <!-- EditText - password -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.EditText</ss:className>
      <ss:password>true</ss:password>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/value_password</ss:template>
    </ss:formatter>
  </ss:rule>

  <!-- EditText - not password -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.EditText</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/template_edit_box</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- SeekBar -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.SeekBar</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/template_seek_bar</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- Spinner -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.Spinner</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/template_spinner</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- WebView -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.webkit.WebView</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/value_web_view</ss:template>
    </ss:formatter>
  </ss:rule>

  <!-- Focused ImageButton -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.ImageButton</ss:className>
    </ss:filter>
    <ss:formatter>
      <ss:template>@string/template_button</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- Focused Button -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.Button</ss:className>
    </ss:filter>
    <ss:formatter>
      <ss:template>@string/template_button</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- Focused ImageView -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
      <ss:className>android.widget.ImageView</ss:className>
    </ss:filter>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.ImageViewFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

  <!-- Focused object with text or description -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_FOCUSED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_VIEW_SELECTED -->

  <!-- Spinner (sometimes gets selected event instead of focused event) -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_SELECTED</ss:eventType>
      <ss:className>android.widget.Spinner</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/template_spinner</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- WebView -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_SELECTED||TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY</ss:eventType>
      <ss:className>android.webkit.WebView</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.WebContentFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

  <!-- ProgressBar -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_SELECTED</ss:eventType>
      <ss:className>android.widget.ProgressBar</ss:className>
    </ss:filter>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.ProgressBarFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

  <!-- All other objects -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_SELECTED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/view_focused_or_selected_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_focused</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_WINDOW_STATE_CHANGED -->

  <!-- Dialog -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_WINDOW_STATE_CHANGED</ss:eventType>
      <ss:className>android.app.Dialog</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/notification_or_window_state_changed_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_notification_state</ss:customEarcon>
      <ss:queuing>UNINTERRUPTIBLE</ss:queuing>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/template_alert_dialog_template</ss:template>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- IconMenuView -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_WINDOW_STATE_CHANGED</ss:eventType>
      <ss:className>com.android.internal.view.menu.IconMenuView</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/notification_or_window_state_changed_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_notification_state</ss:customEarcon>
      <ss:queuing>UNINTERRUPTIBLE</ss:queuing>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/value_options_menu_open</ss:template>
    </ss:formatter>
  </ss:rule>

  <!-- SlidingDrawer -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_WINDOW_STATE_CHANGED</ss:eventType>
      <ss:className>android.widget.SlidingDrawer</ss:className>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/notification_or_window_state_changed_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_notification_state</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:template>@string/value_sliding_drawer_opened</ss:template>
    </ss:formatter>
  </ss:rule>

  <!-- All other state changes -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_WINDOW_STATE_CHANGED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/notification_or_window_state_changed_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_notification_state</ss:customEarcon>
      <ss:queuing>UNINTERRUPTIBLE</ss:queuing>
    </ss:metadata>
    <ss:formatter>
      <ss:property>text</ss:property>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_VIEW_TEXT_CHANGED -->

  <!-- Text added, removed, or replaced -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_TEXT_CHANGED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:customEarcon>@id/sounds_text_changed</ss:customEarcon>
    </ss:metadata>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.TextFormatters$ChangedTextFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>
  
  <!-- TYPE_VIEW_TEXT_SELECTION_CHANGED and TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -->

  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_VIEW_TEXT_SELECTION_CHANGED||TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY</ss:eventType>
    </ss:filter>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.TextFormatters$SelectedTextFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

  <!-- TYPE_NOTIFICATION_STATE_CHANGED -->

  <!-- All -->
  <ss:rule>
    <ss:filter>
      <ss:eventType>TYPE_NOTIFICATION_STATE_CHANGED</ss:eventType>
    </ss:filter>
    <ss:metadata>
      <ss:vibration>@array/notification_or_window_state_changed_pattern</ss:vibration>
      <ss:customEarcon>@id/sounds_notification_state</ss:customEarcon>
      <ss:queuing>QUEUE</ss:queuing>
    </ss:metadata>
    <ss:formatter>
      <ss:custom>com.google.android.marvin.talkback.formatter.NotificationFormatter</ss:custom>
    </ss:formatter>
  </ss:rule>

</ss:speechstrategy>
